# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

volumes:
  orderer.example.com:
  peer0.hospital.example.com:
  peer0.insurance.example.com:

networks:
  test:
    name: fabric_pet

services:
  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:2.2
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_BootstrapFile=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:17050
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ./channel-artifacts/system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls
        - orderer.example.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
      - 17050:17050
    networks:
      - test

  peer0.hospital.example.com:
    container_name: peer0.hospital.example.com
    image: hyperledger/fabric-peer:2.2
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric_pet
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.hospital.example.com
      - CORE_PEER_ADDRESS=peer0.hospital.example.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.hospital.example.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.hospital.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.hospital.example.com:7051
      - CORE_PEER_LOCALMSPID=hospitalMSP
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:17051
    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ./crypto-config/peerOrganizations/hospital.example.com/peers/peer0.hospital.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/hospital.example.com/peers/peer0.hospital.example.com/tls:/etc/hyperledger/fabric/tls
        - peer0.hospital.example.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 7051:7051
      - 17051:17051
    networks:
      - test

  peer0.insurance.example.com:
    container_name: peer0.insurance.example.com
    image: hyperledger/fabric-peer:2.2
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric_pet
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.insurance.example.com
      - CORE_PEER_ADDRESS=peer0.insurance.example.com:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODEADDRESS=peer0.insurance.example.com:9052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.insurance.example.com:9051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.insurance.example.com:9051
      - CORE_PEER_LOCALMSPID=InsuranceMSP
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:19051
    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ./crypto-config/peerOrganizations/insurance.example.com/peers/peer0.insurance.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/insurance.example.com/peers/peer0.insurance.example.com/tls:/etc/hyperledger/fabric/tls
        - peer0.insurance.example.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 9051:9051
      - 19051:19051
    networks:
      - test

  cli1:
    container_name: cli1
    image: hyperledger/fabric-tools:2.2
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - GOPROXY=https://goproxy.io,direct
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      # 启用对服务端的TLS身份验证
      - CORE_PEER_TLS_ENABLED=true
      # Peer节点的X.509证书文件路径
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/crypto/peerOrganizations/hospital.example.com/peers/peer0.hospital.example.com/tls/server.crt
      # Peer节点的私钥文件路径
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/crypto/peerOrganizations/hospital.example.com/peers/peer0.hospital.example.com/tls/server.key
      # Peer节点证书的验证链根证书文件路径
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/crypto/peerOrganizations/hospital.example.com/peers/peer0.hospital.example.com/tls/ca.crt
      # Peer节点的本地MSP配置文件的路径
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/crypto/peerOrganizations/hospital.example.com/users/Admin@hospital.example.com/msp
      # Peer节点ID
      - CORE_PEER_ID=cli1
      # Peer节点连接地址
      - CORE_PEER_ADDRESS=peer0.hospital.example.com:7051
      # 本地MSP标识ID
      - CORE_PEER_LOCALMSPID=hospitalMSP

    working_dir: /opt/hyperledger/fabric
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config:/etc/hyperledger/fabric/peer/crypto
        - ./channel-artifacts:/opt/hyperledger/fabric/channel-artifacts
        - ./chaincode/:/opt/hyperledger/fabric/chaincode
    depends_on:
      - peer0.hospital.example.com
      - peer0.insurance.example.com
    networks:
      - test

  cli2:
    container_name: cli2
    image: hyperledger/fabric-tools:2.2
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - GOPROXY=https://goproxy.io,direct
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      # 启用对服务端的TLS身份验证
      - CORE_PEER_TLS_ENABLED=true
      # Peer节点的X.509证书文件路径
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/crypto/peerOrganizations/insurance.example.com/peers/peer0.insurance.example.com/tls/server.crt
      # Peer节点的私钥文件路径
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/crypto/peerOrganizations/insurance.example.com/peers/peer0.insurance.example.com/tls/server.key
      # Peer节点证书的验证链根证书文件路径
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/crypto/peerOrganizations/insurance.example.com/peers/peer0.insurance.example.com/tls/ca.crt
      # Peer节点的本地MSP配置文件的路径
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/crypto/peerOrganizations/insurance.example.com/users/Admin@insurance.example.com/msp
      # Peer节点ID
      - CORE_PEER_ID=cli2
      # Peer节点连接地址
      - CORE_PEER_ADDRESS=peer0.insurance.example.com:9051
      # 本地MSP标识ID
      - CORE_PEER_LOCALMSPID=InsuranceMSP

    working_dir: /opt/hyperledger/fabric
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config:/etc/hyperledger/fabric/peer/crypto
        - ./channel-artifacts:/opt/hyperledger/fabric/channel-artifacts
        - ./chaincode/:/opt/hyperledger/fabric/chaincode
    depends_on:
      - peer0.hospital.example.com
      - peer0.insurance.example.com
    networks:
      - test 